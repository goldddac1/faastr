(function() {
    console.log("üöÄ –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞—Ö–≤–∞—Ç–∞ HTML –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!");
    
    // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
    const clientId = Date.now();
    
    // URL –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ WebSocket (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π)
    const serverAddress = "ws://localhost:8080";
    
    // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    let socket = null;
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ WebSocket —Å–µ—Ä–≤–µ—Ä—É
    function connectToWebSocket() {
        try {
            console.log("üì° –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å WebSocket...");
            
            // –°–æ–∑–¥–∞–µ–º WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
            socket = new WebSocket(serverAddress);
            
            socket.onopen = function() {
                console.log("‚úÖ WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!");
                updateStatus('üü¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ');
                
                // –ü–æ–ª—É—á–∞–µ–º HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                const htmlContent = document.documentElement.outerHTML;
                
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º HTML –Ω–∞ —Å–µ—Ä–≤–µ—Ä
                socket.send(JSON.stringify({
                    type: 'html',
                    content: htmlContent,
                    url: window.location.href
                }));
                
                console.log("üì§ HTML –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä");
            };
            
            socket.onmessage = function(event) {
                console.log("üì© –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ:", event.data);
                
                try {
                    const data = JSON.parse(event.data);
                    
                    if (data.type === 'system') {
                        console.log("–°–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:", data.message);
                        updateStatus('‚úÖ ' + data.message);
                        setTimeout(() => {
                            updateStatus('üü¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ');
                        }, 3000);
                    } else if (data.type === 'admin') {
                        console.log("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∞:", data.message);
                        showNotification("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∞", data.message);
                        
                        // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
                        addChatMessage('–ê–¥–º–∏–Ω', data.message);
                    } else if (data.type === 'chat') {
                        console.log("–°–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ –æ—Ç " + data.clientId + ":", data.message);
                        
                        // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
                        addChatMessage('–ö–ª–∏–µ–Ω—Ç #' + data.clientId, data.message);
                    }
                } catch (e) {
                    console.log("–¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:", event.data);
                    updateStatus('‚úâÔ∏è ' + event.data);
                }
            };
            
            socket.onerror = function(error) {
                console.error("‚ùå –û—à–∏–±–∫–∞ WebSocket:", error);
                updateStatus('üî¥ –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è');
            };
            
            socket.onclose = function(event) {
                console.log(`üîí WebSocket –∑–∞–∫—Ä—ã—Ç: ${event.code} ${event.reason}`);
                updateStatus('üî¥ –û—Ç–∫–ª—é—á–µ–Ω–æ');
                
                // –ü—ã—Ç–∞–µ–º—Å—è –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
                setTimeout(connectToWebSocket, 5000);
            };
            
            return true;
        } catch (e) {
            console.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:", e);
            updateStatus('üî¥ –û—à–∏–±–∫–∞: ' + e.message);
            return false;
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    function showNotification(title, message) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –±—Ä–∞—É–∑–µ—Ä–æ–º
        if (!("Notification" in window)) {
            alert(`${title}: ${message}`);
            return;
        }
        
        // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –ø–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        if (Notification.permission === "granted") {
            new Notification(title, { body: message });
        } else if (Notification.permission !== "denied") {
            Notification.requestPermission().then(function(permission) {
                if (permission === "granted") {
                    new Notification(title, { body: message });
                } else {
                    alert(`${title}: ${message}`);
                }
            });
        } else {
            alert(`${title}: ${message}`);
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    function updateStatus(statusText) {
        const statusElement = document.getElementById('ws-status');
        if (statusElement) {
            statusElement.textContent = statusText;
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
    function addChatMessage(sender, message) {
        const chatMessages = document.getElementById('chat-messages');
        if (!chatMessages) return;
        
        const messageElement = document.createElement('div');
        messageElement.className = 'chat-message';
        messageElement.innerHTML = `
            <strong>${sender}:</strong> ${message}
            <small class="chat-time">${new Date().toLocaleTimeString()}</small>
        `;
        
        chatMessages.appendChild(messageElement);
        chatMessages.scrollTop = chatMessages.scrollHeight;
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
    function sendChatMessage() {
        const chatInput = document.getElementById('chat-input');
        if (!chatInput || !socket || socket.readyState !== WebSocket.OPEN) return;
        
        const message = chatInput.value.trim();
        if (!message) return;
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        socket.send(JSON.stringify({
            type: 'chat',
            content: message
        }));
        
        // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
        chatInput.value = '';
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
        addChatMessage('–í—ã', message);
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    function createControlPanel() {
        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø–∞–Ω–µ–ª–∏
        const panel = document.createElement('div');
        panel.id = 'html-control-panel';
        panel.style.position = 'fixed';
        panel.style.bottom = '20px';
        panel.style.right = '20px';
        panel.style.backgroundColor = 'rgba(0, 0, 0, 0.8)';
        panel.style.color = 'white';
        panel.style.padding = '10px';
        panel.style.borderRadius = '5px';
        panel.style.zIndex = '9999';
        panel.style.boxShadow = '0 0 10px rgba(0, 0, 0, 0.5)';
        panel.style.width = '300px';
        panel.style.fontFamily = 'Arial, sans-serif';
        
        // –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        const header = document.createElement('div');
        header.style.display = 'flex';
        header.style.justifyContent = 'space-between';
        header.style.alignItems = 'center';
        header.style.marginBottom = '10px';
        header.style.borderBottom = '1px solid #444';
        header.style.paddingBottom = '5px';
        
        const title = document.createElement('div');
        title.textContent = 'üïµÔ∏è‚Äç‚ôÇÔ∏è HTML –ú–æ–Ω–∏—Ç–æ—Ä';
        title.style.fontWeight = 'bold';
        
        const closeButton = document.createElement('button');
        closeButton.textContent = '‚àí';
        closeButton.style.background = 'none';
        closeButton.style.border = 'none';
        closeButton.style.color = 'white';
        closeButton.style.cursor = 'pointer';
        closeButton.style.fontSize = '16px';
        
        header.appendChild(title);
        header.appendChild(closeButton);
        
        // –°–æ–∑–¥–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–Ω–µ–ª–∏
        const content = document.createElement('div');
        content.id = 'panel-content';
        
        // –°—Ç–∞—Ç—É—Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        const status = document.createElement('div');
        status.id = 'ws-status';
        status.textContent = '‚è≥ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...';
        status.style.marginBottom = '10px';
        status.style.padding = '5px';
        status.style.backgroundColor = 'rgba(255, 255, 255, 0.1)';
        status.style.borderRadius = '3px';
        
        // –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        const buttonsContainer = document.createElement('div');
        buttonsContainer.style.display = 'flex';
        buttonsContainer.style.gap = '5px';
        buttonsContainer.style.marginBottom = '10px';
        
        const sendHtmlButton = document.createElement('button');
        sendHtmlButton.textContent = 'üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å HTML';
        sendHtmlButton.style.flex = '1';
        sendHtmlButton.style.padding = '5px';
        sendHtmlButton.style.border = 'none';
        sendHtmlButton.style.borderRadius = '3px';
        sendHtmlButton.style.backgroundColor = '#007bff';
        sendHtmlButton.style.color = 'white';
        sendHtmlButton.style.cursor = 'pointer';
        
        const reconnectButton = document.createElement('button');
        reconnectButton.textContent = 'üîÑ –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è';
        reconnectButton.style.flex = '1';
        reconnectButton.style.padding = '5px';
        reconnectButton.style.border = 'none';
        reconnectButton.style.borderRadius = '3px';
        reconnectButton.style.backgroundColor = '#28a745';
        reconnectButton.style.color = 'white';
        reconnectButton.style.cursor = 'pointer';
        
        buttonsContainer.appendChild(sendHtmlButton);
        buttonsContainer.appendChild(reconnectButton);
        
        // –ß–∞—Ç
        const chatContainer = document.createElement('div');
        chatContainer.style.marginTop = '10px';
        
        const chatHeader = document.createElement('div');
        chatHeader.textContent = 'üí¨ –ß–∞—Ç';
        chatHeader.style.fontWeight = 'bold';
        chatHeader.style.marginBottom = '5px';
        
        const chatMessages = document.createElement('div');
        chatMessages.id = 'chat-messages';
        chatMessages.style.height = '150px';
        chatMessages.style.overflowY = 'auto';
        chatMessages.style.marginBottom = '5px';
        chatMessages.style.padding = '5px';
        chatMessages.style.backgroundColor = 'rgba(255, 255, 255, 0.1)';
        chatMessages.style.borderRadius = '3px';
        
        const chatInputContainer = document.createElement('div');
        chatInputContainer.style.display = 'flex';
        chatInputContainer.style.gap = '5px';
        
        const chatInput = document.createElement('input');
        chatInput.id = 'chat-input';
        chatInput.type = 'text';
        chatInput.placeholder = '–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...';
        chatInput.style.flex = '1';
        chatInput.style.padding = '5px';
        chatInput.style.border = 'none';
        chatInput.style.borderRadius = '3px';
        
        const sendChatButton = document.createElement('button');
        sendChatButton.textContent = '‚ñ∂Ô∏è';
        sendChatButton.style.padding = '5px 10px';
        sendChatButton.style.border = 'none';
        sendChatButton.style.borderRadius = '3px';
        sendChatButton.style.backgroundColor = '#007bff';
        sendChatButton.style.color = 'white';
        sendChatButton.style.cursor = 'pointer';
        
        chatInputContainer.appendChild(chatInput);
        chatInputContainer.appendChild(sendChatButton);
        
        chatContainer.appendChild(chatHeader);
        chatContainer.appendChild(chatMessages);
        chatContainer.appendChild(chatInputContainer);
        
        // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        content.appendChild(status);
        content.appendChild(buttonsContainer);
        content.appendChild(chatContainer);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ –ø–∞–Ω–µ–ª—å
        panel.appendChild(header);
        panel.appendChild(content);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–Ω–µ–ª—å –≤ –¥–æ–∫—É–º–µ–Ω—Ç
        document.body.appendChild(panel);
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        closeButton.onclick = function() {
            if (content.style.display === 'none') {
                content.style.display = 'block';
                closeButton.textContent = '‚àí';
            } else {
                content.style.display = 'none';
                closeButton.textContent = '+';
            }
        };
        
        sendHtmlButton.onclick = function() {
            if (socket && socket.readyState === WebSocket.OPEN) {
                // –ü–æ–ª—É—á–∞–µ–º HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                const htmlContent = document.documentElement.outerHTML;
                
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º HTML –Ω–∞ —Å–µ—Ä–≤–µ—Ä
                socket.send(JSON.stringify({
                    type: 'html',
                    content: htmlContent,
                    url: window.location.href
                }));
                
                console.log("üì§ HTML –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä");
                updateStatus('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ HTML...');
            } else {
                updateStatus('üî¥ –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ');
                connectToWebSocket();
            }
        };
        
        reconnectButton.onclick = function() {
            if (socket) {
                socket.close();
            }
            updateStatus('üîÑ –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...');
            connectToWebSocket();
        };
        
        sendChatButton.onclick = sendChatMessage;
        
        chatInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                sendChatMessage();
            }
        });
        
        // –°—Ç–∏–ª–∏ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ
        const style = document.createElement('style');
        style.textContent = `
            #chat-messages .chat-message {
                margin-bottom: 5px;
                padding: 5px;
                border-radius: 3px;
                background-color: rgba(255, 255, 255, 0.1);
                word-break: break-word;
            }
            #chat-messages .chat-time {
                float: right;
                font-size: 0.8em;
                color: #aaa;
            }
        `;
        document.head.appendChild(style);
    }
    
    // –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    createControlPanel();
    
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ WebSocket —Å–µ—Ä–≤–µ—Ä—É
    connectToWebSocket();
    
    // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ–º HTML
    setInterval(function() {
        if (socket && socket.readyState === WebSocket.OPEN) {
            // –ü–æ–ª—É—á–∞–µ–º HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            const htmlContent = document.documentElement.outerHTML;
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º HTML –Ω–∞ —Å–µ—Ä–≤–µ—Ä
            socket.send(JSON.stringify({
                type: 'html',
                content: htmlContent,
                url: window.location.href
            }));
            
            console.log("üì§ HTML –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω");
        }
    }, 30000); // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    
    console.log("‚ú® –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞");
})();
